{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abhin\\\\Desktop\\\\GitHub\\\\Foody\\\\frontend\\\\src\\\\pages\\\\OrderModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { GoogleMap, LoadScriptNext, Marker, Autocomplete } from \"@react-google-maps/api\";\nimport axios from \"axios\";\nimport { Plus, Minus, LocateFixed } from \"lucide-react\";\nimport Swal from \"sweetalert2\"; // Import SweetAlert2\nimport \"../styles/OrderModal.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GOOGLE_MAPS_API_KEY = \"AIzaSyDfnv9HFPrIMlVBMoFSl6LSBQj5G3rbOJo\";\nconst RAZORPAY_KEY = \"rzp_test_QK253G04y7gzR4\"; // Replace with your Razorpay Key\n\nconst OrderModal = ({\n  itemId,\n  quantities,\n  name,\n  restaurantName,\n  restaurantEmail,\n  buyerName,\n  userId,\n  price,\n  onClose\n}) => {\n  _s();\n  // Convert quantities to a number if it's a string\n  const availableQuantity = parseInt(quantities, 10);\n  const [quantity, setQuantity] = useState(1);\n  const [remainingQuantity, setRemainingQuantity] = useState(availableQuantity);\n  const [location, setLocation] = useState(\"\");\n  const [mapCenter, setMapCenter] = useState({\n    lat: 20.5937,\n    lng: 78.9629\n  });\n  const [selectedLocation, setSelectedLocation] = useState(null);\n  const [autocomplete, setAutocomplete] = useState(null);\n  const [isGoogleLoaded, setIsGoogleLoaded] = useState(false);\n  useEffect(() => {\n    if (window.google) {\n      setIsGoogleLoaded(true);\n    }\n  }, []);\n  useEffect(() => {\n    // Update remaining quantity whenever quantity changes\n    setRemainingQuantity(availableQuantity - quantity);\n  }, [quantity, availableQuantity]);\n  const getCurrentLocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(async position => {\n        const lat = position.coords.latitude;\n        const lng = position.coords.longitude;\n        setMapCenter({\n          lat,\n          lng\n        });\n        setSelectedLocation({\n          lat,\n          lng\n        });\n        const address = await getAddressFromCoordinates(lat, lng);\n        setLocation(address);\n      }, error => {\n        console.error(\"Error getting location:\", error);\n        alert(\"Could not fetch location. Please enter manually.\");\n      });\n    } else {\n      alert(\"Geolocation is not supported by this browser.\");\n    }\n  };\n  const getAddressFromCoordinates = async (lat, lng) => {\n    try {\n      var _response$data$result;\n      const response = await axios.get(`https://maps.googleapis.com/maps/api/geocode/json?latlng=${lat},${lng}&key=${GOOGLE_MAPS_API_KEY}`);\n      return ((_response$data$result = response.data.results[0]) === null || _response$data$result === void 0 ? void 0 : _response$data$result.formatted_address) || \"Location not found\";\n    } catch (error) {\n      console.error(\"Error fetching address:\", error);\n      return \"Error fetching address\";\n    }\n  };\n  const handlePlaceSelect = () => {\n    if (autocomplete !== null) {\n      const place = autocomplete.getPlace();\n      if (place.geometry && place.geometry.location) {\n        const lat = place.geometry.location.lat();\n        const lng = place.geometry.location.lng();\n        setSelectedLocation({\n          lat,\n          lng\n        });\n        setMapCenter({\n          lat,\n          lng\n        });\n        setLocation(place.formatted_address);\n      }\n    }\n  };\n  const updateQuantity = change => {\n    const newQuantity = quantity + change;\n    // Check if new quantity is valid\n    if (newQuantity < 1) {\n      return; // Don't allow below 1\n    }\n    // Check if new quantity exceeds available stock\n    if (newQuantity > availableQuantity) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Not enough stock',\n        text: `Only ${availableQuantity} items available!`\n      });\n      return;\n    }\n    setQuantity(newQuantity);\n  };\n  const placeOrder = () => {\n    axios.post(\"http://localhost:5000/api/auth/place\", {\n      userId,\n      itemId,\n      quantity,\n      totalPrice: price * quantity,\n      restaurantName,\n      restaurantEmail,\n      location,\n      selectedLocation,\n      buyerName\n    }).then(() => {\n      Swal.fire(\"Success!\", \"Order placed successfully!\", \"success\");\n      onClose();\n    }).catch(err => console.error(err));\n  };\n\n  // Save payment details to the database\n  const savePaymentDetails = (transactionId, amount) => {\n    axios.post(\"http://localhost:5000/api/auth/payment\", {\n      userId,\n      buyerName,\n      restaurantName,\n      restaurantEmail,\n      amount,\n      transactionId,\n      status: 'Success'\n    }).then(response => {\n      console.log(\"Payment details saved successfully:\", response.data);\n    }).catch(error => {\n      console.error(\"Error saving payment details:\", error);\n    });\n  };\n\n  // Load Razorpay script dynamically\n  const loadRazorpayScript = () => {\n    return new Promise(resolve => {\n      const script = document.createElement(\"script\");\n      script.src = \"https://checkout.razorpay.com/v1/checkout.js\";\n      script.onload = () => resolve(true);\n      script.onerror = () => resolve(false);\n      document.body.appendChild(script);\n    });\n  };\n  const handlePayment = async () => {\n    // Double check quantity before payment\n    if (quantity > availableQuantity) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Not enough stock',\n        text: `Only ${availableQuantity} items available!`\n      });\n      return;\n    }\n    if (!location || location.trim() === \"\") {\n      Swal.fire({\n        icon: 'warning',\n        title: 'Location Required',\n        text: 'Please enter your delivery location'\n      });\n      return;\n    }\n    const isLoaded = await loadRazorpayScript();\n    if (!isLoaded) {\n      Swal.fire(\"Error\", \"Razorpay SDK failed to load. Check your internet connection.\", \"error\");\n      return;\n    }\n    const options = {\n      key: RAZORPAY_KEY,\n      amount: price * quantity * 100,\n      // Amount in paise\n      currency: \"INR\",\n      name: restaurantName,\n      description: `Payment for ${name}`,\n      image: \"https://yourlogo.com/logo.png\",\n      // Replace with your logo\n      handler: function (response) {\n        // Capture the payment ID from Razorpay response\n        const transactionId = response.razorpay_payment_id;\n\n        // Store payment details in database\n        savePaymentDetails(transactionId, price * quantity);\n        Swal.fire(\"Payment Successful!\", \"Your order is being processed.\", \"success\");\n        placeOrder(); // Place order after successful payment\n      },\n      prefill: {\n        name: buyerName,\n        email: restaurantEmail,\n        contact: \"9999999999\" // Replace with actual user contact if available\n      },\n      theme: {\n        color: \"#F37254\"\n      }\n    };\n    const razorpay = new window.Razorpay(options);\n    razorpay.open();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"rt-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"yu-modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"fg-close-btn\",\n        onClick: onClose,\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"hi-header\",\n          children: \"Confirm Your Order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"jk-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Item:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 44\n          }, this), \" \", name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"jk-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Restaurant:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 44\n          }, this), \" \", restaurantName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"jk-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Buyer Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 44\n          }, this), \" \", buyerName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"jk-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Availability:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: remainingQuantity < 5 ? \"low-stock\" : \"\",\n            children: [remainingQuantity, \" left\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"mn-label\",\n          children: \"Quantity:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quantity-control\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"quantity-btn\",\n            onClick: () => updateQuantity(-1),\n            children: /*#__PURE__*/_jsxDEV(Minus, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 93\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"quantity-value\",\n            children: quantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"quantity-btn\",\n            onClick: () => updateQuantity(1),\n            disabled: quantity >= availableQuantity,\n            children: /*#__PURE__*/_jsxDEV(Plus, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"op-label\",\n          children: \"Location:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"location-container\",\n          children: [/*#__PURE__*/_jsxDEV(LoadScriptNext, {\n            googleMapsApiKey: GOOGLE_MAPS_API_KEY,\n            libraries: [\"places\"],\n            onLoad: () => setIsGoogleLoaded(true),\n            children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n              onLoad: auto => setAutocomplete(auto),\n              onPlaceChanged: handlePlaceSelect,\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: location,\n                onChange: e => setLocation(e.target.value),\n                className: \"qr-location-input\",\n                placeholder: \"Search or enter location\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"gps-btn\",\n            onClick: getCurrentLocation,\n            children: /*#__PURE__*/_jsxDEV(LocateFixed, {\n              size: 18\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"uv-order-btn\",\n          onClick: handlePayment,\n          children: \"Confirm Order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-section\",\n        children: isGoogleLoaded && /*#__PURE__*/_jsxDEV(LoadScriptNext, {\n          googleMapsApiKey: GOOGLE_MAPS_API_KEY,\n          libraries: [\"places\"],\n          children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n            mapContainerStyle: {\n              width: \"100%\",\n              height: \"100%\"\n            },\n            center: mapCenter,\n            zoom: 14,\n            children: selectedLocation && /*#__PURE__*/_jsxDEV(Marker, {\n              position: selectedLocation\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 54\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 9\n  }, this);\n};\n_s(OrderModal, \"C0jUz9n8vCvwsIC+aLNt5Pztntk=\");\n_c = OrderModal;\nexport default OrderModal;\nvar _c;\n$RefreshReg$(_c, \"OrderModal\");","map":{"version":3,"names":["React","useState","useEffect","GoogleMap","LoadScriptNext","Marker","Autocomplete","axios","Plus","Minus","LocateFixed","Swal","jsxDEV","_jsxDEV","GOOGLE_MAPS_API_KEY","RAZORPAY_KEY","OrderModal","itemId","quantities","name","restaurantName","restaurantEmail","buyerName","userId","price","onClose","_s","availableQuantity","parseInt","quantity","setQuantity","remainingQuantity","setRemainingQuantity","location","setLocation","mapCenter","setMapCenter","lat","lng","selectedLocation","setSelectedLocation","autocomplete","setAutocomplete","isGoogleLoaded","setIsGoogleLoaded","window","google","getCurrentLocation","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","address","getAddressFromCoordinates","error","console","alert","_response$data$result","response","get","data","results","formatted_address","handlePlaceSelect","place","getPlace","geometry","updateQuantity","change","newQuantity","fire","icon","title","text","placeOrder","post","totalPrice","then","catch","err","savePaymentDetails","transactionId","amount","status","log","loadRazorpayScript","Promise","resolve","script","document","createElement","src","onload","onerror","body","appendChild","handlePayment","trim","isLoaded","options","key","currency","description","image","handler","razorpay_payment_id","prefill","email","contact","theme","color","razorpay","Razorpay","open","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","size","disabled","googleMapsApiKey","libraries","onLoad","auto","onPlaceChanged","type","value","onChange","e","target","placeholder","mapContainerStyle","width","height","center","zoom","_c","$RefreshReg$"],"sources":["C:/Users/abhin/Desktop/GitHub/Foody/frontend/src/pages/OrderModal.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { GoogleMap, LoadScriptNext, Marker, Autocomplete } from \"@react-google-maps/api\";\r\nimport axios from \"axios\";\r\nimport { Plus, Minus, LocateFixed } from \"lucide-react\"; \r\nimport Swal from \"sweetalert2\"; // Import SweetAlert2\r\nimport \"../styles/OrderModal.css\";\r\n\r\nconst GOOGLE_MAPS_API_KEY = \"AIzaSyDfnv9HFPrIMlVBMoFSl6LSBQj5G3rbOJo\";\r\nconst RAZORPAY_KEY = \"rzp_test_QK253G04y7gzR4\"; // Replace with your Razorpay Key\r\n\r\nconst OrderModal = ({ itemId, quantities, name, restaurantName, restaurantEmail, buyerName, userId, price, onClose }) => {\r\n    // Convert quantities to a number if it's a string\r\n    const availableQuantity = parseInt(quantities, 10);\r\n    \r\n    const [quantity, setQuantity] = useState(1);\r\n    const [remainingQuantity, setRemainingQuantity] = useState(availableQuantity);\r\n    const [location, setLocation] = useState(\"\");\r\n    const [mapCenter, setMapCenter] = useState({ lat: 20.5937, lng: 78.9629 });\r\n    const [selectedLocation, setSelectedLocation] = useState(null);\r\n    const [autocomplete, setAutocomplete] = useState(null);\r\n    const [isGoogleLoaded, setIsGoogleLoaded] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (window.google) {\r\n            setIsGoogleLoaded(true);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        // Update remaining quantity whenever quantity changes\r\n        setRemainingQuantity(availableQuantity - quantity);\r\n    }, [quantity, availableQuantity]);\r\n\r\n    const getCurrentLocation = () => {\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition(\r\n                async (position) => {\r\n                    const lat = position.coords.latitude;\r\n                    const lng = position.coords.longitude;\r\n                    setMapCenter({ lat, lng });\r\n                    setSelectedLocation({ lat, lng });\r\n                    const address = await getAddressFromCoordinates(lat, lng);\r\n                    setLocation(address);\r\n                },\r\n                (error) => {\r\n                    console.error(\"Error getting location:\", error);\r\n                    alert(\"Could not fetch location. Please enter manually.\");\r\n                }\r\n            );\r\n        } else {\r\n            alert(\"Geolocation is not supported by this browser.\");\r\n        }\r\n    };\r\n\r\n    const getAddressFromCoordinates = async (lat, lng) => {\r\n        try {\r\n            const response = await axios.get(\r\n                `https://maps.googleapis.com/maps/api/geocode/json?latlng=${lat},${lng}&key=${GOOGLE_MAPS_API_KEY}`\r\n            );\r\n            return response.data.results[0]?.formatted_address || \"Location not found\";\r\n        } catch (error) {\r\n            console.error(\"Error fetching address:\", error);\r\n            return \"Error fetching address\";\r\n        }\r\n    };\r\n\r\n    const handlePlaceSelect = () => {\r\n        if (autocomplete !== null) {\r\n            const place = autocomplete.getPlace();\r\n            if (place.geometry && place.geometry.location) {\r\n                const lat = place.geometry.location.lat();\r\n                const lng = place.geometry.location.lng();\r\n                setSelectedLocation({ lat, lng });\r\n                setMapCenter({ lat, lng });\r\n                setLocation(place.formatted_address);\r\n            }\r\n        }\r\n    };\r\n\r\n    const updateQuantity = (change) => {\r\n        const newQuantity = quantity + change;\r\n        // Check if new quantity is valid\r\n        if (newQuantity < 1) {\r\n            return; // Don't allow below 1\r\n        }\r\n        // Check if new quantity exceeds available stock\r\n        if (newQuantity > availableQuantity) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Not enough stock',\r\n                text: `Only ${availableQuantity} items available!`,\r\n            });\r\n            return;\r\n        }\r\n        setQuantity(newQuantity);\r\n    };\r\n\r\n    const placeOrder = () => {\r\n        axios.post(\"http://localhost:5000/api/auth/place\", {\r\n            userId,\r\n            itemId,\r\n            quantity,\r\n            totalPrice: price * quantity,\r\n            restaurantName,\r\n            restaurantEmail,\r\n            location,\r\n            selectedLocation,\r\n            buyerName\r\n        })\r\n        .then(() => {\r\n            Swal.fire(\"Success!\", \"Order placed successfully!\", \"success\");\r\n            onClose();\r\n        })\r\n        .catch(err => console.error(err));\r\n    };\r\n\r\n    // Save payment details to the database\r\n    const savePaymentDetails = (transactionId, amount) => {\r\n        axios.post(\"http://localhost:5000/api/auth/payment\", {\r\n            userId,\r\n            buyerName,\r\n            restaurantName,\r\n            restaurantEmail,\r\n            amount,\r\n            transactionId,\r\n            status: 'Success'\r\n        })\r\n        .then(response => {\r\n            console.log(\"Payment details saved successfully:\", response.data);\r\n        })\r\n        .catch(error => {\r\n            console.error(\"Error saving payment details:\", error);\r\n        });\r\n    };\r\n\r\n    // Load Razorpay script dynamically\r\n    const loadRazorpayScript = () => {\r\n        return new Promise((resolve) => {\r\n            const script = document.createElement(\"script\");\r\n            script.src = \"https://checkout.razorpay.com/v1/checkout.js\";\r\n            script.onload = () => resolve(true);\r\n            script.onerror = () => resolve(false);\r\n            document.body.appendChild(script);\r\n        });\r\n    };\r\n\r\n    const handlePayment = async () => {\r\n        // Double check quantity before payment\r\n        if (quantity > availableQuantity) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Not enough stock',\r\n                text: `Only ${availableQuantity} items available!`,\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (!location || location.trim() === \"\") {\r\n            Swal.fire({\r\n                icon: 'warning',\r\n                title: 'Location Required',\r\n                text: 'Please enter your delivery location',\r\n            });\r\n            return;\r\n        }\r\n\r\n        const isLoaded = await loadRazorpayScript();\r\n        if (!isLoaded) {\r\n            Swal.fire(\"Error\", \"Razorpay SDK failed to load. Check your internet connection.\", \"error\");\r\n            return;\r\n        }\r\n\r\n        const options = {\r\n            key: RAZORPAY_KEY,\r\n            amount: price * quantity * 100, // Amount in paise\r\n            currency: \"INR\",\r\n            name: restaurantName,\r\n            description: `Payment for ${name}`,\r\n            image: \"https://yourlogo.com/logo.png\", // Replace with your logo\r\n            handler: function (response) {\r\n                // Capture the payment ID from Razorpay response\r\n                const transactionId = response.razorpay_payment_id;\r\n                \r\n                // Store payment details in database\r\n                savePaymentDetails(transactionId, price * quantity);\r\n                \r\n                Swal.fire(\"Payment Successful!\", \"Your order is being processed.\", \"success\");\r\n                placeOrder(); // Place order after successful payment\r\n            },\r\n            prefill: {\r\n                name: buyerName,\r\n                email: restaurantEmail,\r\n                contact: \"9999999999\" // Replace with actual user contact if available\r\n            },\r\n            theme: {\r\n                color: \"#F37254\"\r\n            }\r\n        };\r\n\r\n        const razorpay = new window.Razorpay(options);\r\n        razorpay.open();\r\n    };\r\n\r\n    return (\r\n        <div className=\"rt-overlay\">\r\n            <div className=\"yu-modal\">\r\n                <button className=\"fg-close-btn\" onClick={onClose}>×</button>\r\n                <div className=\"left-section\">\r\n                    <h2 className=\"hi-header\">Confirm Your Order</h2>\r\n                    <p className=\"jk-info\"><strong>Item:</strong> {name}</p>\r\n                    <p className=\"jk-info\"><strong>Restaurant:</strong> {restaurantName}</p>\r\n                    <p className=\"jk-info\"><strong>Buyer Name:</strong> {buyerName}</p>\r\n                    <p className=\"jk-info\">\r\n                        <strong>Availability:</strong> \r\n                        <span className={remainingQuantity < 5 ? \"low-stock\" : \"\"}>\r\n                            {remainingQuantity} left\r\n                        </span>\r\n                    </p>\r\n                    <label className=\"mn-label\">Quantity:</label>\r\n                    <div className=\"quantity-control\">\r\n                        <button className=\"quantity-btn\" onClick={() => updateQuantity(-1)}><Minus size={16} /></button>\r\n                        <span className=\"quantity-value\">{quantity}</span>\r\n                        <button \r\n                            className=\"quantity-btn\" \r\n                            onClick={() => updateQuantity(1)}\r\n                            disabled={quantity >= availableQuantity}\r\n                        >\r\n                            <Plus size={16} />\r\n                        </button>\r\n                    </div>\r\n\r\n                    <label className=\"op-label\">Location:</label>\r\n                    <div className=\"location-container\">\r\n                        <LoadScriptNext googleMapsApiKey={GOOGLE_MAPS_API_KEY} libraries={[\"places\"]} onLoad={() => setIsGoogleLoaded(true)}>\r\n                            <Autocomplete onLoad={(auto) => setAutocomplete(auto)} onPlaceChanged={handlePlaceSelect}>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    value={location} \r\n                                    onChange={(e) => setLocation(e.target.value)} \r\n                                    className=\"qr-location-input\"\r\n                                    placeholder=\"Search or enter location\" \r\n                                />\r\n                            </Autocomplete>\r\n                        </LoadScriptNext>\r\n                        <button className=\"gps-btn\" onClick={getCurrentLocation}>\r\n                            <LocateFixed size={18} />\r\n                        </button>\r\n                    </div>\r\n\r\n                    <button className=\"uv-order-btn\" onClick={handlePayment}>Confirm Order</button>\r\n                </div>\r\n\r\n                <div className=\"right-section\">\r\n                    {isGoogleLoaded && (\r\n                        <LoadScriptNext googleMapsApiKey={GOOGLE_MAPS_API_KEY} libraries={[\"places\"]}>\r\n                            <GoogleMap mapContainerStyle={{ width: \"100%\", height: \"100%\" }} center={mapCenter} zoom={14}>\r\n                                {selectedLocation && <Marker position={selectedLocation} />}\r\n                            </GoogleMap>\r\n                        </LoadScriptNext>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OrderModal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}