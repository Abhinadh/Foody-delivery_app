{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abhin\\\\Desktop\\\\GitHub\\\\Foody\\\\frontend\\\\src\\\\pages\\\\Cart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useUser } from \"../context/UserContext\";\nimport axios from \"axios\";\nimport \"../styles/Cart.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { GoogleMap, LoadScriptNext, Marker, Autocomplete } from \"@react-google-maps/api\";\nimport { Plus, Minus, LocateFixed } from \"lucide-react\";\nimport Swal from \"sweetalert2\";\nimport \"../styles/Cartlocation.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GOOGLE_MAPS_API_KEY = \"AIzaSyDfnv9HFPrIMlVBMoFSl6LSBQj5G3rbOJo\";\nconst RAZORPAY_KEY = \"rzp_test_QK253G04y7gzR4\";\nconst Cart = () => {\n  _s();\n  const {\n    user\n  } = useUser();\n  const [cartItems, setCartItems] = useState([]);\n  const [isOrdering, setIsOrdering] = useState(false);\n  const [orderMessage, setOrderMessage] = useState(\"\");\n  const navigate = useNavigate();\n\n  // Add states for buyer name and restaurant information\n  const [buyerName, setBuyerName] = useState(\"\");\n  const [restaurantInfoMap, setRestaurantInfoMap] = useState({});\n\n  // Location and map states\n  const [showLocationModal, setShowLocationModal] = useState(false);\n  const [location, setLocation] = useState(\"\");\n  const [mapCenter, setMapCenter] = useState({\n    lat: 20.5937,\n    lng: 78.9629\n  }); // India's center\n  const [selectedLocation, setSelectedLocation] = useState(null);\n  const [autocomplete, setAutocomplete] = useState(null);\n  const [isGoogleLoaded, setIsGoogleLoaded] = useState(false);\n  useEffect(() => {\n    if (user !== null && user !== void 0 && user.id) {\n      fetchCartItems();\n    }\n  }, [user]);\n\n  // Fetch user profile information\n  useEffect(() => {\n    if (user !== null && user !== void 0 && user.email) {\n      axios.get(`http://localhost:5000/api/auth/user/profile?email=${user.email}`).then(response => {\n        setBuyerName(response.data.name);\n      }).catch(error => {\n        console.error(\"Error fetching user profile:\", error);\n      });\n    }\n  }, [user]);\n  useEffect(() => {\n    if (window.google) {\n      setIsGoogleLoaded(true);\n    }\n  }, []);\n\n  // Fetch restaurant information for each unique restaurant ID\n  useEffect(() => {\n    const fetchRestaurantInfo = async () => {\n      const restaurantIds = [...new Set(cartItems.filter(item => item.item.restaurantId).map(item => item.item.restaurantId))];\n      const infoMap = {};\n      for (const restaurantId of restaurantIds) {\n        try {\n          const response = await axios.get(`http://localhost:5000/api/auth/admin/restaurants/name/${restaurantId}`);\n          infoMap[restaurantId] = {\n            name: response.data.name || \"Unknown\",\n            email: response.data.email || \"Unknown\"\n          };\n        } catch (error) {\n          console.error(`Error fetching restaurant info for ID ${restaurantId}:`, error);\n          infoMap[restaurantId] = {\n            name: \"Error fetching name\",\n            email: \"Unknown\"\n          };\n        }\n      }\n      setRestaurantInfoMap(infoMap);\n    };\n    if (cartItems.length > 0) {\n      fetchRestaurantInfo();\n    }\n  }, [cartItems]);\n  const fetchCartItems = async () => {\n    try {\n      const {\n        data\n      } = await axios.get(`http://localhost:5000/api/auth/cart/${user.id}`);\n      console.log(\"Cart Data from Backend:\", data);\n      setCartItems(data);\n    } catch (error) {\n      console.error(\"Error fetching cart:\", error);\n    }\n  };\n  const removeItem = async cartId => {\n    try {\n      await axios.delete(`http://localhost:5000/api/auth/cart/remove/${cartId}`);\n      setCartItems(cartItems.filter(item => item._id !== cartId));\n    } catch (error) {\n      console.error(\"Error removing item:\", error);\n    }\n  };\n  const updateQuantity = async (cartId, newQuantity) => {\n    if (newQuantity < 1) return;\n    try {\n      await axios.put(`http://localhost:5000/api/auth/cart/update/${cartId}`, {\n        quantity: newQuantity\n      });\n      setCartItems(cartItems.map(item => item._id === cartId ? {\n        ...item,\n        quantity: newQuantity\n      } : item));\n    } catch (error) {\n      console.error(\"Error updating quantity:\", error);\n    }\n  };\n  const getCurrentLocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(async position => {\n        const lat = position.coords.latitude;\n        const lng = position.coords.longitude;\n        setMapCenter({\n          lat,\n          lng\n        });\n        setSelectedLocation({\n          lat,\n          lng\n        });\n        const address = await getAddressFromCoordinates(lat, lng);\n        setLocation(address);\n      }, error => {\n        console.error(\"Error getting location:\", error);\n        Swal.fire(\"Error\", \"Could not fetch location. Please enter manually.\", \"error\");\n      });\n    } else {\n      Swal.fire(\"Error\", \"Geolocation is not supported by this browser.\", \"error\");\n    }\n  };\n  const getAddressFromCoordinates = async (lat, lng) => {\n    try {\n      var _response$data$result;\n      const response = await axios.get(`https://maps.googleapis.com/maps/api/geocode/json?latlng=${lat},${lng}&key=${GOOGLE_MAPS_API_KEY}`);\n      return ((_response$data$result = response.data.results[0]) === null || _response$data$result === void 0 ? void 0 : _response$data$result.formatted_address) || \"Location not found\";\n    } catch (error) {\n      console.error(\"Error fetching address:\", error);\n      return \"Error fetching address\";\n    }\n  };\n  const handlePlaceSelect = () => {\n    if (autocomplete !== null) {\n      const place = autocomplete.getPlace();\n      if (place.geometry && place.geometry.location) {\n        const lat = place.geometry.location.lat();\n        const lng = place.geometry.location.lng();\n        setSelectedLocation({\n          lat,\n          lng\n        });\n        setMapCenter({\n          lat,\n          lng\n        });\n        setLocation(place.formatted_address);\n      }\n    }\n  };\n\n  // Load Razorpay script dynamically\n  const loadRazorpayScript = () => {\n    return new Promise(resolve => {\n      const script = document.createElement(\"script\");\n      script.src = \"https://checkout.razorpay.com/v1/checkout.js\";\n      script.onload = () => resolve(true);\n      script.onerror = () => resolve(false);\n      document.body.appendChild(script);\n    });\n  };\n  const startOrderProcess = () => {\n    if (cartItems.length === 0) {\n      Swal.fire(\"Error\", \"Your cart is empty\", \"error\");\n      return;\n    }\n    setShowLocationModal(true);\n  };\n  const handlePayment = async () => {\n    if (!location || !selectedLocation) {\n      Swal.fire(\"Error\", \"Please select a delivery location\", \"error\");\n      return;\n    }\n    const isLoaded = await loadRazorpayScript();\n    if (!isLoaded) {\n      Swal.fire(\"Error\", \"Razorpay SDK failed to load. Check your internet connection.\", \"error\");\n      return;\n    }\n    const totalAmount = cartItems.reduce((sum, item) => sum + item.item.price * item.quantity, 0);\n    const options = {\n      key: RAZORPAY_KEY,\n      amount: totalAmount * 100,\n      // Amount in paise\n      currency: \"INR\",\n      name: \"Food Delivery\",\n      description: `Payment for ${cartItems.length} items`,\n      image: \"https://yourlogo.com/logo.png\",\n      // Replace with your logo\n      handler: function (response) {\n        // Payment was successful, now place all orders\n        placeAllOrders(response.razorpay_payment_id);\n      },\n      prefill: {\n        name: buyerName || user.name || user.username,\n        email: user.email,\n        contact: user.phone || \"9999999999\" // Replace with actual user contact if available\n      },\n      theme: {\n        color: \"#F37254\"\n      }\n    };\n    const razorpay = new window.Razorpay(options);\n    razorpay.open();\n  };\n  const placeAllOrders = async paymentId => {\n    setIsOrdering(true);\n    setOrderMessage(\"Processing your order...\");\n    setShowLocationModal(false);\n    try {\n      // Create an array of promises for each order\n      const orderPromises = cartItems.map(async cartItem => {\n        // Get restaurant info from the map or use fallbacks\n        const restaurantInfo = restaurantInfoMap[cartItem.item.restaurantId] || {\n          name: cartItem.item.restaurant || \"Unknown Restaurant\",\n          email: cartItem.item.restaurantEmail || \"restaurant@example.com\"\n        };\n\n        // Make sure we have all required fields from the backend requirement\n        const orderData = {\n          userId: user.id,\n          itemId: cartItem.item._id,\n          quantity: cartItem.quantity,\n          totalPrice: cartItem.item.price * cartItem.quantity,\n          restaurantName: restaurantInfo.name,\n          restaurantEmail: restaurantInfo.email,\n          location: location,\n          selectedLocation: selectedLocation,\n          buyerName: buyerName || user.name || user.username\n          //  paymentId: paymentId // Optional field\n        };\n\n        // Debug logging to check fields\n        console.log(\"Sending order data:\", orderData);\n\n        // Verify all required fields are present\n        const requiredFields = [\"userId\", \"itemId\", \"quantity\", \"totalPrice\", \"restaurantName\", \"restaurantEmail\", \"location\", \"buyerName\"];\n        const missingFields = requiredFields.filter(field => !orderData[field]);\n        if (missingFields.length > 0) {\n          console.error(\"Missing required fields:\", missingFields);\n          throw new Error(`Missing required fields: ${missingFields.join(\", \")}`);\n        }\n\n        // Place the order\n        return axios.post(\"http://localhost:5000/api/auth/place\", orderData);\n      });\n      const results = await Promise.all(orderPromises);\n      console.log(\"All orders placed successfully:\", results);\n      await axios.delete(`http://localhost:5000/api/auth/cart/clear/${user.id}`);\n      Swal.fire(\"Success!\", \"All orders placed successfully!\", \"success\");\n      setCartItems([]);\n      setTimeout(() => {\n        navigate(-1);\n      }, 2000);\n    } catch (error) {\n      console.error(\"Error placing orders:\", error);\n      Swal.fire(\"Error\", `Error placing orders: ${error.message}`, \"error\");\n    } finally {\n      setIsOrdering(false);\n      setOrderMessage(\"\");\n    }\n  };\n  const totalAmount = cartItems.reduce((sum, item) => sum + item.item.price * item.quantity, 0);\n\n  // Helper function to get restaurant name for display\n  const getRestaurantName = cartItem => {\n    if (cartItem.item.restaurantId && restaurantInfoMap[cartItem.item.restaurantId]) {\n      return restaurantInfoMap[cartItem.item.restaurantId].name;\n    }\n    return cartItem.item.restaurant || \"Unknown Restaurant\";\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"vwcrz-cart-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"My Cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 13\n    }, this), orderMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `vwcrz-order-message ${isOrdering ? 'loading' : ''}`,\n      children: orderMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"vwcrz-cart-list\",\n      children: cartItems.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"vwcrz-empty-cart\",\n        children: \"Your cart is empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 21\n      }, this) : cartItems.map(cartItem => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vwcrz-cart-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `http://localhost:5000/api/auth/restaurant/menu/image/${cartItem.item._id}`,\n          alt: cartItem.item.name,\n          className: \"vwcrz-item-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vwcrz-item-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: cartItem.item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: cartItem.item.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"vwcrz-restaurant-name\",\n            children: [\"From: \", getRestaurantName(cartItem)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"vwcrz-item-price\",\n          children: [\"\\u20B9\", cartItem.item.price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vwcrz-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => updateQuantity(cartItem._id, cartItem.quantity - 1),\n            disabled: cartItem.quantity <= 1 || isOrdering,\n            children: \"-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: cartItem.quantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => updateQuantity(cartItem._id, cartItem.quantity + 1),\n            disabled: isOrdering,\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => removeItem(cartItem._id),\n            className: \"vwcrz-remove\",\n            disabled: isOrdering,\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 29\n        }, this)]\n      }, cartItem._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"vwcrz-total-container\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Total: \\u20B9\", totalAmount.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `vwcrz-order-button ${isOrdering ? 'loading' : ''}`,\n      onClick: startOrderProcess,\n      disabled: isOrdering || cartItems.length === 0,\n      children: isOrdering ? 'Processing...' : 'Order All'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 13\n    }, this), showLocationModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"vwcrz-location-modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vwcrz-location-modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"vwcrz-close-btn\",\n          onClick: () => setShowLocationModal(false),\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vwcrz-location-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Delivery Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"vwcrz-location-input-container\",\n            children: [/*#__PURE__*/_jsxDEV(LoadScriptNext, {\n              googleMapsApiKey: GOOGLE_MAPS_API_KEY,\n              libraries: [\"places\"],\n              onLoad: () => setIsGoogleLoaded(true),\n              children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n                onLoad: auto => setAutocomplete(auto),\n                onPlaceChanged: handlePlaceSelect,\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: location,\n                  onChange: e => setLocation(e.target.value),\n                  className: \"vwcrz-location-input\",\n                  placeholder: \"Search or enter delivery address\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 365,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"vwcrz-gps-btn\",\n              onClick: getCurrentLocation,\n              children: /*#__PURE__*/_jsxDEV(LocateFixed, {\n                size: 18\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"vwcrz-map-container\",\n            children: isGoogleLoaded && /*#__PURE__*/_jsxDEV(LoadScriptNext, {\n              googleMapsApiKey: GOOGLE_MAPS_API_KEY,\n              libraries: [\"places\"],\n              children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n                mapContainerStyle: {\n                  width: \"100%\",\n                  height: \"100%\"\n                },\n                center: mapCenter,\n                zoom: 14,\n                children: selectedLocation && /*#__PURE__*/_jsxDEV(Marker, {\n                  position: selectedLocation\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 387,\n                  columnNumber: 66\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"vwcrz-modal-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"vwcrz-cancel-btn\",\n              onClick: () => setShowLocationModal(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"vwcrz-confirm-btn\",\n              onClick: handlePayment,\n              children: \"Proceed to Payment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 303,\n    columnNumber: 9\n  }, this);\n};\n_s(Cart, \"0exHL6CMIbsmQXaUAXv6So2AgMc=\", false, function () {\n  return [useUser, useNavigate];\n});\n_c = Cart;\nexport default Cart;\nvar _c;\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"names":["React","useEffect","useState","useUser","axios","useNavigate","GoogleMap","LoadScriptNext","Marker","Autocomplete","Plus","Minus","LocateFixed","Swal","jsxDEV","_jsxDEV","GOOGLE_MAPS_API_KEY","RAZORPAY_KEY","Cart","_s","user","cartItems","setCartItems","isOrdering","setIsOrdering","orderMessage","setOrderMessage","navigate","buyerName","setBuyerName","restaurantInfoMap","setRestaurantInfoMap","showLocationModal","setShowLocationModal","location","setLocation","mapCenter","setMapCenter","lat","lng","selectedLocation","setSelectedLocation","autocomplete","setAutocomplete","isGoogleLoaded","setIsGoogleLoaded","id","fetchCartItems","email","get","then","response","data","name","catch","error","console","window","google","fetchRestaurantInfo","restaurantIds","Set","filter","item","restaurantId","map","infoMap","length","log","removeItem","cartId","delete","_id","updateQuantity","newQuantity","put","quantity","getCurrentLocation","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","address","getAddressFromCoordinates","fire","_response$data$result","results","formatted_address","handlePlaceSelect","place","getPlace","geometry","loadRazorpayScript","Promise","resolve","script","document","createElement","src","onload","onerror","body","appendChild","startOrderProcess","handlePayment","isLoaded","totalAmount","reduce","sum","price","options","key","amount","currency","description","image","handler","placeAllOrders","razorpay_payment_id","prefill","username","contact","phone","theme","color","razorpay","Razorpay","open","paymentId","orderPromises","cartItem","restaurantInfo","restaurant","restaurantEmail","orderData","userId","itemId","totalPrice","restaurantName","requiredFields","missingFields","field","Error","join","post","all","setTimeout","message","getRestaurantName","className","children","fileName","_jsxFileName","lineNumber","columnNumber","alt","onClick","disabled","toFixed","googleMapsApiKey","libraries","onLoad","auto","onPlaceChanged","type","value","onChange","e","target","placeholder","size","mapContainerStyle","width","height","center","zoom","_c","$RefreshReg$"],"sources":["C:/Users/abhin/Desktop/GitHub/Foody/frontend/src/pages/Cart.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useUser } from \"../context/UserContext\";\r\nimport axios from \"axios\";\r\nimport \"../styles/Cart.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { GoogleMap, LoadScriptNext, Marker, Autocomplete } from \"@react-google-maps/api\";\r\nimport { Plus, Minus, LocateFixed } from \"lucide-react\";\r\nimport Swal from \"sweetalert2\";\r\nimport \"../styles/Cartlocation.css\"\r\n\r\nconst GOOGLE_MAPS_API_KEY = \"AIzaSyDfnv9HFPrIMlVBMoFSl6LSBQj5G3rbOJo\";\r\nconst RAZORPAY_KEY = \"rzp_test_QK253G04y7gzR4\";\r\n\r\nconst Cart = () => {\r\n    const { user } = useUser();\r\n    const [cartItems, setCartItems] = useState([]);\r\n    const [isOrdering, setIsOrdering] = useState(false);\r\n    const [orderMessage, setOrderMessage] = useState(\"\");\r\n    const navigate = useNavigate();\r\n    \r\n    // Add states for buyer name and restaurant information\r\n    const [buyerName, setBuyerName] = useState(\"\");\r\n    const [restaurantInfoMap, setRestaurantInfoMap] = useState({});\r\n    \r\n    // Location and map states\r\n    const [showLocationModal, setShowLocationModal] = useState(false);\r\n    const [location, setLocation] = useState(\"\");\r\n    const [mapCenter, setMapCenter] = useState({ lat: 20.5937, lng: 78.9629 }); // India's center\r\n    const [selectedLocation, setSelectedLocation] = useState(null);\r\n    const [autocomplete, setAutocomplete] = useState(null);\r\n    const [isGoogleLoaded, setIsGoogleLoaded] = useState(false);\r\n    \r\n    useEffect(() => {\r\n        if (user?.id) {\r\n            fetchCartItems();\r\n        }\r\n    }, [user]);\r\n\r\n    // Fetch user profile information\r\n    useEffect(() => {\r\n        if (user?.email) {\r\n            axios.get(`http://localhost:5000/api/auth/user/profile?email=${user.email}`)\r\n                .then(response => {\r\n                    setBuyerName(response.data.name);\r\n                })\r\n                .catch(error => {\r\n                    console.error(\"Error fetching user profile:\", error);\r\n                });\r\n        }\r\n    }, [user]);\r\n\r\n    useEffect(() => {\r\n        if (window.google) {\r\n            setIsGoogleLoaded(true);\r\n        }\r\n    }, []);\r\n\r\n    // Fetch restaurant information for each unique restaurant ID\r\n    useEffect(() => {\r\n        const fetchRestaurantInfo = async () => {\r\n            const restaurantIds = [...new Set(cartItems\r\n                .filter(item => item.item.restaurantId)\r\n                .map(item => item.item.restaurantId))];\r\n            \r\n            const infoMap = {};\r\n            \r\n            for (const restaurantId of restaurantIds) {\r\n                try {\r\n                    const response = await axios.get(`http://localhost:5000/api/auth/admin/restaurants/name/${restaurantId}`);\r\n                    infoMap[restaurantId] = {\r\n                        name: response.data.name || \"Unknown\",\r\n                        email: response.data.email || \"Unknown\"\r\n                    };\r\n                } catch (error) {\r\n                    console.error(`Error fetching restaurant info for ID ${restaurantId}:`, error);\r\n                    infoMap[restaurantId] = {\r\n                        name: \"Error fetching name\",\r\n                        email: \"Unknown\"\r\n                    };\r\n                }\r\n            }\r\n            \r\n            setRestaurantInfoMap(infoMap);\r\n        };\r\n        \r\n        if (cartItems.length > 0) {\r\n            fetchRestaurantInfo();\r\n        }\r\n    }, [cartItems]);\r\n\r\n    const fetchCartItems = async () => {\r\n        try {\r\n            const { data } = await axios.get(`http://localhost:5000/api/auth/cart/${user.id}`);\r\n            console.log(\"Cart Data from Backend:\", data);\r\n            setCartItems(data);\r\n        } catch (error) {\r\n            console.error(\"Error fetching cart:\", error);\r\n        }\r\n    };\r\n\r\n    const removeItem = async (cartId) => {\r\n        try {\r\n            await axios.delete(`http://localhost:5000/api/auth/cart/remove/${cartId}`);\r\n            setCartItems(cartItems.filter(item => item._id !== cartId));\r\n        } catch (error) {\r\n            console.error(\"Error removing item:\", error);\r\n        }\r\n    };\r\n\r\n    const updateQuantity = async (cartId, newQuantity) => {\r\n        if (newQuantity < 1) return;\r\n\r\n        try {\r\n            await axios.put(`http://localhost:5000/api/auth/cart/update/${cartId}`, { quantity: newQuantity });\r\n            setCartItems(cartItems.map(item => \r\n                item._id === cartId ? { ...item, quantity: newQuantity } : item\r\n            ));\r\n        } catch (error) {\r\n            console.error(\"Error updating quantity:\", error);\r\n        }\r\n    };\r\n\r\n    const getCurrentLocation = () => {\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition(\r\n                async (position) => {\r\n                    const lat = position.coords.latitude;\r\n                    const lng = position.coords.longitude;\r\n                    setMapCenter({ lat, lng });\r\n                    setSelectedLocation({ lat, lng });\r\n                    const address = await getAddressFromCoordinates(lat, lng);\r\n                    setLocation(address);\r\n                },\r\n                (error) => {\r\n                    console.error(\"Error getting location:\", error);\r\n                    Swal.fire(\"Error\", \"Could not fetch location. Please enter manually.\", \"error\");\r\n                }\r\n            );\r\n        } else {\r\n            Swal.fire(\"Error\", \"Geolocation is not supported by this browser.\", \"error\");\r\n        }\r\n    };\r\n\r\n    const getAddressFromCoordinates = async (lat, lng) => {\r\n        try {\r\n            const response = await axios.get(\r\n                `https://maps.googleapis.com/maps/api/geocode/json?latlng=${lat},${lng}&key=${GOOGLE_MAPS_API_KEY}`\r\n            );\r\n            return response.data.results[0]?.formatted_address || \"Location not found\";\r\n        } catch (error) {\r\n            console.error(\"Error fetching address:\", error);\r\n            return \"Error fetching address\";\r\n        }\r\n    };\r\n\r\n    const handlePlaceSelect = () => {\r\n        if (autocomplete !== null) {\r\n            const place = autocomplete.getPlace();\r\n            if (place.geometry && place.geometry.location) {\r\n                const lat = place.geometry.location.lat();\r\n                const lng = place.geometry.location.lng();\r\n                setSelectedLocation({ lat, lng });\r\n                setMapCenter({ lat, lng });\r\n                setLocation(place.formatted_address);\r\n            }\r\n        }\r\n    };\r\n\r\n    // Load Razorpay script dynamically\r\n    const loadRazorpayScript = () => {\r\n        return new Promise((resolve) => {\r\n            const script = document.createElement(\"script\");\r\n            script.src = \"https://checkout.razorpay.com/v1/checkout.js\";\r\n            script.onload = () => resolve(true);\r\n            script.onerror = () => resolve(false);\r\n            document.body.appendChild(script);\r\n        });\r\n    };\r\n\r\n    const startOrderProcess = () => {\r\n        if (cartItems.length === 0) {\r\n            Swal.fire(\"Error\", \"Your cart is empty\", \"error\");\r\n            return;\r\n        }\r\n        setShowLocationModal(true);\r\n    };\r\n\r\n    const handlePayment = async () => {\r\n        if (!location || !selectedLocation) {\r\n            Swal.fire(\"Error\", \"Please select a delivery location\", \"error\");\r\n            return;\r\n        }\r\n\r\n        const isLoaded = await loadRazorpayScript();\r\n        if (!isLoaded) {\r\n            Swal.fire(\"Error\", \"Razorpay SDK failed to load. Check your internet connection.\", \"error\");\r\n            return;\r\n        }\r\n\r\n        const totalAmount = cartItems.reduce((sum, item) => sum + item.item.price * item.quantity, 0);\r\n\r\n        const options = {\r\n            key: RAZORPAY_KEY,\r\n            amount: totalAmount * 100, // Amount in paise\r\n            currency: \"INR\",\r\n            name: \"Food Delivery\",\r\n            description: `Payment for ${cartItems.length} items`,\r\n            image: \"https://yourlogo.com/logo.png\", // Replace with your logo\r\n            handler: function (response) {\r\n                // Payment was successful, now place all orders\r\n                placeAllOrders(response.razorpay_payment_id);\r\n            },\r\n            prefill: {\r\n                name: buyerName || user.name || user.username,\r\n                email: user.email,\r\n                contact: user.phone || \"9999999999\" // Replace with actual user contact if available\r\n            },\r\n            theme: {\r\n                color: \"#F37254\"\r\n            }\r\n        };\r\n\r\n        const razorpay = new window.Razorpay(options);\r\n        razorpay.open();\r\n    };\r\n\r\n    const placeAllOrders = async (paymentId) => {\r\n        setIsOrdering(true);\r\n        setOrderMessage(\"Processing your order...\");\r\n        setShowLocationModal(false);\r\n        \r\n        try {\r\n            // Create an array of promises for each order\r\n            const orderPromises = cartItems.map(async (cartItem) => {\r\n                // Get restaurant info from the map or use fallbacks\r\n                const restaurantInfo = restaurantInfoMap[cartItem.item.restaurantId] || {\r\n                    name: cartItem.item.restaurant || \"Unknown Restaurant\",\r\n                    email: cartItem.item.restaurantEmail || \"restaurant@example.com\"\r\n                };\r\n                \r\n                // Make sure we have all required fields from the backend requirement\r\n                const orderData = {\r\n                    userId: user.id,\r\n                    itemId: cartItem.item._id,\r\n                    quantity: cartItem.quantity,\r\n                    totalPrice: cartItem.item.price * cartItem.quantity,\r\n                    restaurantName: restaurantInfo.name,\r\n                    restaurantEmail: restaurantInfo.email,\r\n                    location: location,\r\n                    selectedLocation:selectedLocation,\r\n                    buyerName: buyerName || user.name || user.username,\r\n                  //  paymentId: paymentId // Optional field\r\n                };\r\n    \r\n                // Debug logging to check fields\r\n                console.log(\"Sending order data:\", orderData);\r\n    \r\n                // Verify all required fields are present\r\n                const requiredFields = [\"userId\", \"itemId\", \"quantity\", \"totalPrice\", \"restaurantName\", \"restaurantEmail\", \"location\", \"buyerName\"];\r\n                const missingFields = requiredFields.filter(field => !orderData[field]);\r\n                \r\n                if (missingFields.length > 0) {\r\n                    console.error(\"Missing required fields:\", missingFields);\r\n                    throw new Error(`Missing required fields: ${missingFields.join(\", \")}`);\r\n                }\r\n    \r\n                // Place the order\r\n                return axios.post(\"http://localhost:5000/api/auth/place\", orderData);\r\n            });\r\n    \r\n            const results = await Promise.all(orderPromises);\r\n            console.log(\"All orders placed successfully:\", results);\r\n            \r\n            await axios.delete(`http://localhost:5000/api/auth/cart/clear/${user.id}`);\r\n            \r\n            Swal.fire(\"Success!\", \"All orders placed successfully!\", \"success\");\r\n            setCartItems([]);\r\n            \r\n            setTimeout(() => {\r\n                navigate(-1);\r\n            }, 2000);\r\n            \r\n        } catch (error) {\r\n            console.error(\"Error placing orders:\", error);\r\n            Swal.fire(\"Error\", `Error placing orders: ${error.message}`, \"error\");\r\n        } finally {\r\n            setIsOrdering(false);\r\n            setOrderMessage(\"\");\r\n        }\r\n    };\r\n\r\n    const totalAmount = cartItems.reduce((sum, item) => sum + item.item.price * item.quantity, 0);\r\n\r\n    // Helper function to get restaurant name for display\r\n    const getRestaurantName = (cartItem) => {\r\n        if (cartItem.item.restaurantId && restaurantInfoMap[cartItem.item.restaurantId]) {\r\n            return restaurantInfoMap[cartItem.item.restaurantId].name;\r\n        }\r\n        return cartItem.item.restaurant || \"Unknown Restaurant\";\r\n    };\r\n\r\n    return (\r\n        <div className=\"vwcrz-cart-container\">\r\n            <h2>My Cart</h2>\r\n            \r\n            {orderMessage && (\r\n                <div className={`vwcrz-order-message ${isOrdering ? 'loading' : ''}`}>\r\n                    {orderMessage}\r\n                </div>\r\n            )}\r\n            \r\n            <div className=\"vwcrz-cart-list\">\r\n                {cartItems.length === 0 ? (\r\n                    <p className=\"vwcrz-empty-cart\">Your cart is empty</p>\r\n                ) : (\r\n                    cartItems.map((cartItem) => (\r\n                        <div key={cartItem._id} className=\"vwcrz-cart-item\">\r\n                            <img src={`http://localhost:5000/api/auth/restaurant/menu/image/${cartItem.item._id}`} \r\n                                alt={cartItem.item.name} className=\"vwcrz-item-image\" />\r\n                            <div className=\"vwcrz-item-details\">\r\n                                <h3>{cartItem.item.name}</h3>\r\n                                <p>{cartItem.item.description}</p>\r\n                                <p className=\"vwcrz-restaurant-name\">From: {getRestaurantName(cartItem)}</p>\r\n                            </div>\r\n                            <span className=\"vwcrz-item-price\">₹{cartItem.item.price}</span>\r\n                            <div className=\"vwcrz-actions\">\r\n                                <button onClick={() => updateQuantity(cartItem._id, cartItem.quantity - 1)} \r\n                                    disabled={cartItem.quantity <= 1 || isOrdering}>-</button>\r\n                                <span>{cartItem.quantity}</span>\r\n                                <button onClick={() => updateQuantity(cartItem._id, cartItem.quantity + 1)}\r\n                                    disabled={isOrdering}>+</button>\r\n                                <button onClick={() => removeItem(cartItem._id)} \r\n                                    className=\"vwcrz-remove\"\r\n                                    disabled={isOrdering}>Remove</button>\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                )}\r\n            </div>\r\n    \r\n            {/* Fixed Total Price Box */}\r\n            <div className=\"vwcrz-total-container\">\r\n                <span>Total: ₹{totalAmount.toFixed(2)}</span>\r\n            </div>\r\n    \r\n            <button \r\n                className={`vwcrz-order-button ${isOrdering ? 'loading' : ''}`}\r\n                onClick={startOrderProcess}\r\n                disabled={isOrdering || cartItems.length === 0}>\r\n                {isOrdering ? 'Processing...' : 'Order All'}\r\n            </button>\r\n\r\n            {/* Location Modal */}\r\n            {showLocationModal && (\r\n                <div className=\"vwcrz-location-modal-overlay\">\r\n                    <div className=\"vwcrz-location-modal\">\r\n                        <button className=\"vwcrz-close-btn\" onClick={() => setShowLocationModal(false)}>×</button>\r\n                        \r\n                        <div className=\"vwcrz-location-container\">\r\n                            <h3>Delivery Location</h3>\r\n                            \r\n                            <div className=\"vwcrz-location-input-container\">\r\n                                <LoadScriptNext googleMapsApiKey={GOOGLE_MAPS_API_KEY} libraries={[\"places\"]} onLoad={() => setIsGoogleLoaded(true)}>\r\n                                    <Autocomplete onLoad={(auto) => setAutocomplete(auto)} onPlaceChanged={handlePlaceSelect}>\r\n                                        <input \r\n                                            type=\"text\" \r\n                                            value={location} \r\n                                            onChange={(e) => setLocation(e.target.value)} \r\n                                            className=\"vwcrz-location-input\"\r\n                                            placeholder=\"Search or enter delivery address\" \r\n                                        />\r\n                                    </Autocomplete>\r\n                                </LoadScriptNext>\r\n                                <button className=\"vwcrz-gps-btn\" onClick={getCurrentLocation}>\r\n                                    <LocateFixed size={18} />\r\n                                </button>\r\n                            </div>\r\n                            \r\n                            <div className=\"vwcrz-map-container\">\r\n                                {isGoogleLoaded && (\r\n                                    <LoadScriptNext googleMapsApiKey={GOOGLE_MAPS_API_KEY} libraries={[\"places\"]}>\r\n                                        <GoogleMap \r\n                                            mapContainerStyle={{ width: \"100%\", height: \"100%\" }} \r\n                                            center={mapCenter} \r\n                                            zoom={14}\r\n                                        >\r\n                                            {selectedLocation && <Marker position={selectedLocation} />}\r\n                                        </GoogleMap>\r\n                                    </LoadScriptNext>\r\n                                )}\r\n                            </div>\r\n                            \r\n                            <div className=\"vwcrz-modal-actions\">\r\n                                <button className=\"vwcrz-cancel-btn\" onClick={() => setShowLocationModal(false)}>Cancel</button>\r\n                                <button className=\"vwcrz-confirm-btn\" onClick={handlePayment}>Proceed to Payment</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Cart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}